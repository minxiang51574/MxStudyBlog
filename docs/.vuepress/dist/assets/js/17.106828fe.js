(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{351:function(t,a,s){t.exports=s.p+"assets/img/redux.b3eda632.jpg"},444:function(t,a,s){"use strict";s.r(a);var r=s(56),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"react"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" react")]),t._v(" "),r("h3",{attrs:{id:"声明式编程-vs-命令式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#声明式编程-vs-命令式编程"}},[t._v("#")]),t._v(" 声明式编程 vs 命令式编程")]),t._v(" "),r("p",[t._v("声明式编程的编写方式描述了应该做什么，而命令式编程描述了如何做。在声明式编程中，让编译器决定如何做事情。声明性程序很容易推理，因为代码本身描述了它在做什么。")]),t._v(" "),r("h3",{attrs:{id:"什么是函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是函数式编程"}},[t._v("#")]),t._v(" 什么是函数式编程")]),t._v(" "),r("p",[t._v("函数式编程是声明式编程的一部分。javascript中的函数是第一类公民，这意味着函数是数据，你可以像保存变量一样在应用程序中保存、检索和传递这些函数。")]),t._v(" "),r("h3",{attrs:{id:"函数式编程的好处是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程的好处是什么"}},[t._v("#")]),t._v(" 函数式编程的好处是什么？")]),t._v(" "),r("p",[t._v("1 函数式编程让我们的代码更清晰，每个功能都是一个函数。\n2 函数是数据，你可以像保存变量一样在应用程序中保存、检索和传递这些函数。\n3 函数式编程为我们的代码测试代理了极大的方便，更容易实现前端自动化测试。")]),t._v(" "),r("h3",{attrs:{id:"什么是react"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是react"}},[t._v("#")]),t._v(" 什么是React")]),t._v(" "),r("p",[t._v("React是一个简单的javascript UI库，用于构建高效、快速的用户界面。它是一个轻量级库，因此很受欢迎。它遵循组件设计模式、声明式编程范式和函数式编程概念，以使前端应用程序更高效。它使用虚拟DOM来有效地操作DOM。它遵循从高阶组件到低阶组件的单向数据流。")]),t._v(" "),r("h3",{attrs:{id:"react-与-angular-有何不同"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-与-angular-有何不同"}},[t._v("#")]),t._v(" React 与 Angular 有何不同？")]),t._v(" "),r("p",[t._v("Angular是一个成熟的MVC框架，带有很多特定的特性，比如服务、指令、模板、模块、解析器等等。React是一个非常轻量级的库，它只关注MVC的视图部分。\nAngular遵循两个方向的数据流，而React遵循从上到下的单向数据流。React在开发特性时给了开发人员很大的自由，例如，调用API的方式、路由等等。我们不需要包括路由器库，除非我们需要它在我们的项目")]),t._v(" "),r("h3",{attrs:{id:"什么是virtual-dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是virtual-dom"}},[t._v("#")]),t._v(" 什么是Virtual DOM")]),t._v(" "),r("p",[t._v("Virtual DOM 是一个轻量级的 JavaScript 对象，它最初只是 real DOM 的副本。它是一个节点树，它将元素、它们的属性和内容作为对象及其属性")]),t._v(" "),r("h3",{attrs:{id:"什么是-jsx"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是-jsx"}},[t._v("#")]),t._v(" 什么是 JSX")]),t._v(" "),r("p",[t._v("JSX是javascript的语法扩展。它就像一个拥有javascript全部功能的模板语言。它生成React元素，这些元素将在DOM中呈现。React建议在组件使用JSX。在JSX中，我们结合了javascript和HTML，并生成了可以在DOM中呈现的react元素。")]),t._v(" "),r("h3",{attrs:{id:"diff算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[t._v("#")]),t._v(" diff算法?")]),t._v(" "),r("p",[t._v("把树形结构按照层级分解，只比较同级元素。\n给列表结构的每个单元添加唯一的key属性，方便比较。")]),t._v(" "),r("h3",{attrs:{id:"生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),r("h4",{attrs:{id:"componentwillmount"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#componentwillmount"}},[t._v("#")]),t._v(" componentWillMount()")]),t._v(" "),r("p",[t._v("在渲染前调用,在客户端也在服务端，它只发生一次。")]),t._v(" "),r("h4",{attrs:{id:"componentdidmount"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#componentdidmount"}},[t._v("#")]),t._v(" componentDidMount()")]),t._v(" "),r("p",[t._v("在第一次渲染后调用，只在客户端。之后组件已经生成了对应的DOM结构，可以通过this.getDOMNode()来进行访问。 如果你想和其他JavaScript框架一起使用，可以在这个方法中调用setTimeout, setInterval或者发送AJAX请求等操作(防止异部操作阻塞UI)。")]),t._v(" "),r("h4",{attrs:{id:"componentwillreceiveprops"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#componentwillreceiveprops"}},[t._v("#")]),t._v(" componentWillReceiveProps()")]),t._v(" "),r("p",[t._v("在组件接收到一个新的 prop (更新后)时被调用。这个方法在初始化render时不会被调用")]),t._v(" "),r("h4",{attrs:{id:"shouldcomponentupdate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate"}},[t._v("#")]),t._v(" shouldComponentUpdate()")]),t._v(" "),r("p",[t._v("返回一个布尔值。在组件接收到新的props或者state时被调用。在初始化时或者使用forceUpdate时不被调用。 可以在你确认不需要更新组件时使用（性能优化）判断是否更新当前组件信息 现在可以PureComponent提升性能")]),t._v(" "),r("h4",{attrs:{id:"componentwillupdate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#componentwillupdate"}},[t._v("#")]),t._v(" componentWillUpdate()")]),t._v(" "),r("p",[t._v("在组件接收到新的props或者state但还没有render时被调用。在初始化时不会被调用。")]),t._v(" "),r("h4",{attrs:{id:"componentdidupdate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#componentdidupdate"}},[t._v("#")]),t._v(" componentDidUpdate()")]),t._v(" "),r("p",[t._v("在组件完成更新后立即调用。在初始化时不会被调用。")]),t._v(" "),r("h4",{attrs:{id:"componentwillunmount"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#componentwillunmount"}},[t._v("#")]),t._v(" componentWillUnMount()")]),t._v(" "),r("p",[t._v("组件从 DOM 中移除的时候立刻被调用。")]),t._v(" "),r("h3",{attrs:{id:"什么是-react-router-dom-及其工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是-react-router-dom-及其工作原理"}},[t._v("#")]),t._v(" 什么是 React Router Dom 及其工作原理")]),t._v(" "),r("p",[t._v("react-router-dom是应用程序中路由的库。 React库中没有路由功能，需要单独安装react-router-dom。\nreact-router-dom 提供两个路由器BrowserRouter和HashRoauter。前者基于url的pathname段，后者基于hash段。")]),t._v(" "),r("h3",{attrs:{id:"react-router-dom-组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-router-dom-组件"}},[t._v("#")]),t._v(" react-router-dom 组件")]),t._v(" "),r("ul",[r("li",[t._v("BrowserRouter 和 HashRouter 是路由器")]),t._v(" "),r("li",[t._v("Route 用于路由匹配")]),t._v(" "),r("li",[t._v("Link 组件用于在应用程序中创建链接。 它将在HTML中渲染为锚标记")]),t._v(" "),r("li",[t._v("NavLink是突出显示当前活动链接的特殊链接")]),t._v(" "),r("li",[t._v("Switch 不是必需的，但在组合路由时很有用")]),t._v(" "),r("li",[t._v("Redirect 用于强制路由重定向")])]),t._v(" "),r("h3",{attrs:{id:"如何提高性能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何提高性能"}},[t._v("#")]),t._v(" 如何提高性能")]),t._v(" "),r("ul",[r("li",[t._v("适当地使用shouldComponentUpdate生命周期方法。 它避免了子组件的不必要的渲染。 如果树中有100个组件，则不重新渲染整个组件树来提高应用程序性能")]),t._v(" "),r("li",[t._v("使用create-react-app来构建项目，这会创建整个项目结构，并进行大量优化")]),t._v(" "),r("li",[t._v("不可变性是提高性能的关键。不要对数据进行修改，而是始终在现有集合的基础上创建新的集合，以保持尽可能少的复制，从而提高性能")]),t._v(" "),r("li",[t._v("在显示列表或表格时始终使用 Keys，这会让 React 的更新速度更快")]),t._v(" "),r("li",[t._v("代码分离是将代码插入到单独的文件中，只加载模块或部分所需的文件的技术")])]),t._v(" "),r("h3",{attrs:{id:"react-router-dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-router-dom"}},[t._v("#")]),t._v(" react-router-dom")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" BrowserRouter "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Route "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react-router-dom"')]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BrowserRouter"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n       "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" exact component"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Home"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Route"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n       "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/detail/:id"')]),t._v(" exact component"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Detail"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Route"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n       "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/write'")]),t._v(" exact component"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Write"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Route"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n       "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),t._v(" exact component"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Login"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Route"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("BrowserRouter"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),r("h3",{attrs:{id:"immutable-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#immutable-js"}},[t._v("#")]),t._v(" Immutable.js")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[t._v("Immutable数据就是一旦创建，就不能更改的数据。\n每当对Immutable对象进行修改的时候，就会返回一个新的Immutable对象，以此来保证数据的不可变\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" fromJS "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"immutable"')]),t._v("\nfromJS将一个js数据转换为Immutable类型的数据\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dafaultState "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromJS")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("focused")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mouseIn")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("list")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("page")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("totalPage")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),r("h3",{attrs:{id:"redux工作流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux工作流程"}},[t._v("#")]),t._v(" redux工作流程")]),t._v(" "),r("p",[r("img",{attrs:{src:s(351),alt:"dd"}})]),t._v(" "),r("h3",{attrs:{id:"react-setstate为什么异步-能不能同步-什么时候异步-什么时候同步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-setstate为什么异步-能不能同步-什么时候异步-什么时候同步"}},[t._v("#")]),t._v(" （React）setState为什么异步？能不能同步？什么时候异步？什么时候同步？")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("setState 只在合成事件和钩子函数中是“异步”的，在原生事件和 setTimeout 中都是同步的。")])]),t._v(" "),r("li",[r("p",[t._v("合成事件：就是react 在组件中的onClick等都是属于它自定义的合成事件")])]),t._v(" "),r("li",[r("p",[t._v("原生事件：比如通过addeventListener添加的，dom中的原生事件")])])]),t._v(" "),r("h3",{attrs:{id:"redux-thunk"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-thunk"}},[t._v("#")]),t._v(" Redux-thunk")]),t._v(" "),r("p",[t._v("使用了redux-thunk后，store中reducer就不仅仅接受一个action对象了，它可以接受一个函数了")]),t._v(" "),r("p",[t._v("简单的action作为函数，在action进行异步操作，发出新的action。")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//actionCreators")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//普通action")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getInitListData")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INIT_LIST_DATA")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  value\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getTodoList")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dispatch")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    axios\n      "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/list.json'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" list "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInitListData")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"redux-saga"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-saga"}},[t._v("#")]),t._v(" Redux-saga")]),t._v(" "),r("p",[t._v("Redux-saga是一个用于管理 Redux 应用异步操作的中间件\n本质都是为了解决异步action的问题")]),t._v(" "),r("h3",{attrs:{id:"vue和react异同"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue和react异同"}},[t._v("#")]),t._v(" vue和React异同")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("react与Vue只有框架的骨架，其他的功能如路由、状态管理等是框架分离的组件")])]),t._v(" "),r("li",[r("p",[t._v("都使用虚拟dom")])]),t._v(" "),r("li",[r("p",[t._v("React与Vue都鼓励组件化应用")])]),t._v(" "),r("li",[r("p",[t._v("1.react是类式的写法;vue是声明式的写法")])]),t._v(" "),r("li",[r("p",[t._v("2.react通过js来操作一切jsx语法")])]),t._v(" "),r("li",[r("p",[t._v("3.react数据是不是可变的;vue的思想是响应式的，也就是基于是数据可变")])])]),t._v(" "),r("p",[t._v("react整体的思路就是函数式，所以推崇纯组件，数据不可变，单向数据流，而vue是基于可变数据的，支持双向绑定。\nreact组件的扩展一般是通过高阶组件，而vue组件会使用mixin。\nvue内置了很多功能，而react做的很少，很多都是由社区来完成的。\nvue追求的是开发的简单，而react更在乎方式是否正确")])])}),[],!1,null,null,null);a.default=e.exports}}]);