(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{386:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue源码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue源码分析"}},[t._v("#")]),t._v(" vue源码分析")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("将回答问题的方式、思路和层次提升一个层级")])]),t._v(" "),a("h2",{attrs:{id:"_1-v-if和v-for哪个优先级更高-同时出现-如何优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-if和v-for哪个优先级更高-同时出现-如何优化"}},[t._v("#")]),t._v(" 1.v-if和v-for哪个优先级更高？同时出现 如何优化？")]),t._v(" "),a("blockquote",[a("p",[t._v("源码 compiler/condegen/index.js")])]),t._v(" "),a("h4",{attrs:{id:"结论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("ul",[a("li",[t._v("1.显然v-for的优先级高于v-if (codegenindex源码中顺序为el.once > el.for < el.if)")]),t._v(" "),a("li",[t._v("2.如果同时出现，每次渲染都会先执行循环在判断，循环不可避免，浪费性能")]),t._v(" "),a("li",[t._v("3.将v-if提到外面一层，内部进行v-for循环")])]),t._v(" "),a("h2",{attrs:{id:"_2-vue组件data为什么必须是个函数而vue的根实例没有这个限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue组件data为什么必须是个函数而vue的根实例没有这个限制"}},[t._v("#")]),t._v(" 2.Vue组件data为什么必须是个函数而Vue的根实例没有这个限制？")]),t._v(" "),a("blockquote",[a("p",[t._v("源码 src/core/instance/state.js - initData()")])]),t._v(" "),a("h4",{attrs:{id:"结论-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论-2"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("ul",[a("li",[t._v("Vue组件可能存在多个实例，如果使用对象形式定义data,他们将会公用一个data对象，状态改变将会\n影响多个组件实例;采用函数定义，在initData时会返回一个全新的data对象，避免多实例的状态污染。\nVue跟实例不会出现这个问题，是因为根实例只能有一个。")])]),t._v(" "),a("h2",{attrs:{id:"_3-vue中的key的作用和工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue中的key的作用和工作原理"}},[t._v("#")]),t._v(" 3.Vue中的key的作用和工作原理？")]),t._v(" "),a("blockquote",[a("p",[t._v("源码 src/core/vdom/patch.js - updateChildren()")])]),t._v(" "),a("h4",{attrs:{id:"结论-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论-3"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("ul",[a("li",[t._v("1.key的主要作用是为了更高效的更新虚拟Dom,其原理是vue在patch过程中通过key可以精准的判断两个节点\n是否是同一个，避免频繁更新不同的元素，会让整个patch过程更加高效，减少dom操作，提高性能。")]),t._v(" "),a("li",[t._v("2.若不设置key还可能在列表更新引发一些隐藏的bug")])]),t._v(" "),a("h2",{attrs:{id:"_4-怎么理解vue中的diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-怎么理解vue中的diff算法"}},[t._v("#")]),t._v(" 4.怎么理解vue中的diff算法？")]),t._v(" "),a("blockquote",[a("p",[t._v("源码分析1：必要性 lifecycle.js - mountConponent()\n组件中可能存在很多个data中的key使用\n源码分析2：执行方法 patch.js- patchVnode()\npatchVnode是diff发生的地方 整体策略:深度优先，同级比较\n源码分析3：高效性 patch.js -updateChildren()")])]),t._v(" "),a("h4",{attrs:{id:"结论-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论-4"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("ul",[a("li",[t._v("1.diff算法是虚拟DOM的必然产物：通过新旧虚拟DOM作对比，将变化的地方更新在真实的DOM上，\n另外，也需要diff高效的执行对比过程。")]),t._v(" "),a("li",[t._v("2.vue 2.x中为了降低Watcher粒度，每个组件只有一个watcher与之对应，只有引入diff才能精确找到\n变化的地方。")]),t._v(" "),a("li",[t._v("3.vue中diff执行的时刻是组件实例执行其更新函数时，它会对比上一次渲染结果的oldVnode和新的渲染结果\nnewVnode,此过程称为patch。")])]),t._v(" "),a("h2",{attrs:{id:"_5-vue组件化的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue组件化的理解"}},[t._v("#")]),t._v(" 5.Vue组件化的理解？")]),t._v(" "),a("blockquote",[a("p",[t._v("组件化定义，优点，使用场景和注意事项。\n源码分析1：组件定义 src/core/global-api/assets.js\nvue-loader会编译template为render函数，最终导出的依然是组件配置对象。\n源码分析2：组件化优点 lifecycle.js = mountComponent()\n组件、watcher、渲染函数和更新函数之间的关系\n源码分析3：组件化实现 src/code/global-api/extend.js\n实例化及挂载，src/core/vdom/patch.js - createElm()")])]),t._v(" "),a("h4",{attrs:{id:"结论-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论-5"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("ul",[a("li",[t._v("1.组件化是软件工程中的一种思想，组件是独立和可复用的代码单元。组件是vue核心特性之一。")]),t._v(" "),a("li",[t._v("2.组件化开发能大幅度提高效率，测试性，复用性。")]),t._v(" "),a("li",[t._v("3.组件按分类有：页面组件，业务组件，通用组件。")]),t._v(" "),a("li",[t._v("4.vue的组件是基于配置的，我们通常编写的组件是组件配置而非组件，框架后续会生成其构造函数，\n他们是基于vueComponent,拓展于Vue；")]),t._v(" "),a("li",[t._v("5.vue中常见的组件化：属性prop,自定义事件，插槽。")]),t._v(" "),a("li",[t._v("6.组件应该是高内聚，低耦合的。")]),t._v(" "),a("li",[t._v("7.遵循单向数据流的原则。")])]),t._v(" "),a("h2",{attrs:{id:"_6-谈一谈vue设计原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-谈一谈vue设计原则"}},[t._v("#")]),t._v(" 6.谈一谈vue设计原则？")]),t._v(" "),a("ul",[a("li",[t._v("1.渐进式js框架")]),t._v(" "),a("li",[t._v("2.易用 灵活 高效")])]),t._v(" "),a("h2",{attrs:{id:"_7-你了解哪些vue的性能优化方法-代码层面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-你了解哪些vue的性能优化方法-代码层面"}},[t._v("#")]),t._v(" 7.你了解哪些Vue的性能优化方法(代码层面)？")]),t._v(" "),a("ul",[a("li",[t._v("1.路由懒加载")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./xx.vue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("2.keep-alive 缓存页面")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive include"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"getProcess"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("ul",[a("li",[t._v("3.使用v-show复用dom")]),t._v(" "),a("li",[t._v("4.v-for 遍历避免同时使用v-if")]),t._v(" "),a("li",[t._v("5.长列表性能优化\n"),a("ul",[a("li",[t._v("如果列表是纯粹的数据展示，Object,freeze()冻结")]),t._v(" "),a("li",[t._v("如果是大数据长列表 可采用虚拟滚动。 vue-virtual-scroller")])])]),t._v(" "),a("li",[t._v("6.图片懒加载")]),t._v(" "),a("li",[t._v("7.第三方插件按需引入")]),t._v(" "),a("li",[t._v("8.无状态的组件标记为函数式组件")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template functional"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tab"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"props.value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    props"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"_8-对3-0的新特性有没有了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-对3-0的新特性有没有了解"}},[t._v("#")]),t._v(" 8.对3.0的新特性有没有了解？")]),t._v(" "),a("ul",[a("li",[t._v("更快\n"),a("ul",[a("li",[t._v("虚拟DOM重写")]),t._v(" "),a("li",[t._v("优化slots的生成")]),t._v(" "),a("li",[t._v("静态属性提升")]),t._v(" "),a("li",[t._v("基于proxy的响应式系统")])])]),t._v(" "),a("li",[t._v("更小：优化核心库体积")]),t._v(" "),a("li",[t._v("更易维护：Ts+模块化")]),t._v(" "),a("li",[t._v("更加优化")]),t._v(" "),a("li",[t._v("更容易使用")])]),t._v(" "),a("h2",{attrs:{id:"_9-computed的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-computed的实现原理"}},[t._v("#")]),t._v(" 9.computed的实现原理")]),t._v(" "),a("ul",[a("li",[t._v("1.当组件初始化的时候，computed 和 data 会分别建立各自的响应系统，Observer遍历 data 中每个属性设置 get/set 数据拦截")]),t._v(" "),a("li",[t._v("2.初始化 computed 会调用 initComputed 函数\n"),a("ul",[a("li",[t._v("1.注册一个 watcher 实例，并在内实例化一个 Dep 消息订阅器用作后续收集依赖（比如渲染函数的 watcher 或者其他观察该计算属性变化的 watcher")]),t._v(" "),a("li",[t._v("2.调用计算属性时会触发其Object.defineProperty的get访问器函数")]),t._v(" "),a("li",[t._v("3.调用 watcher.depend() 方法向自身的消息订阅器 dep 的 subs 中添加其他属性的 watcher")]),t._v(" "),a("li",[t._v("4.调用 watcher 的 evaluate 方法（进而调用 watcher 的 get 方法）让自身成为其他 watcher 的消息订阅器的订阅者，首先将 watcher 赋给 Dep.target，然后执行 getter 求值函数，当访问求值函数里面的属性（比如来自 data、props 或其他 computed）时，会同样触发它们的 get 访问器函数从而将该计算属性的 watcher 添加到求值函数中属性的 watcher 的消息订阅器 dep 中，当这些操作完成，最后关闭 Dep.target 赋为 null 并返回求值函数结果")])])]),t._v(" "),a("li",[t._v("3.当某个属性发生变化，触发 set 拦截函数，然后调用自身消息订阅器 dep 的 notify 方法，遍历当前 dep 中保存着所有订阅者 wathcer 的 subs 数组，并逐个调用 watcher 的 update 方法，完成响应更新")])]),t._v(" "),a("h2",{attrs:{id:"_10-vue对数组做了哪些处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-vue对数组做了哪些处理"}},[t._v("#")]),t._v(" 10.vue对数组做了哪些处理")]),t._v(" "),a("p",[t._v("Object.defineProperty不支持监听数组变化。所以需要重写数组上面的方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrayProto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//原生Array的原型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arrayMethods "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayProto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pop'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shift'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unshift'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'splice'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sort'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reverse'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" original "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arrayProto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//缓存元素数组原型")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里重写了数组的几个原型方法")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("def")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayMethods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里备份一份参数应该是从性能方面的考虑")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("original")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//原始方法求值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__ob__"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里this.__ob__指向的是数据的Observer")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" inserted\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        inserted "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unshift'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        inserted "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'splice'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        inserted "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inserted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observeArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inserted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// notify change")]),t._v("\n    ob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enumerable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    enumerable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("enumerable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    writable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    configurable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("第一步：先获取原生 Array 的原型方法，因为拦截后还是需要原生的方法帮我们实现数组的变化。")]),t._v(" "),a("li",[t._v("第二步：对 Array 的原型方法使用 Object.defineProperty 做一些劫持拦截操作。")]),t._v(" "),a("li",[t._v("第三步：把需要被拦截的 Array 类型的数据原型指向改造后原型。\nVue在observer数据阶段会判断如果是数组的话，则修改数组的原型，这样的话，后面对数组的任何操作都可以在劫持的过程中控制。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);